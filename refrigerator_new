from decimal import Decimal
from datetime import date, datetime, timedelta
from collections import defaultdict


goods = {}

DATE_FORMAT = '%Y-%m-%d'


def add(items, title, amount, expiration_date=None):
    if expiration_date != None:
        expiration_date = datetime.strptime(expiration_date, DATE_FORMAT).date()
    if title not in items:
        items[title] = [{'amount': amount,
                         'expiration_date': expiration_date}]
    else:
        items[title].append({'amount': amount,
                             'expiration_date': expiration_date})


def add_by_note(items, note):
    note = note.split()
    try:
        is_it_date = datetime.strptime(note[-1], DATE_FORMAT).date()
        expiration_date = note[-1]
        amount = Decimal(note[-2])
        title = ' '.join(name_part for name_part in note[:-2])
        add(items, title, amount, expiration_date)

    except ValueError:
        amount = Decimal(note[-1])
        title = ' '.join(name_part for name_part in note[:-1])

        add(items, title, amount)


def find(items, needle):
    needle = needle.lower()
    find_list = [item for item in items if needle in item.lower()]

    return find_list


def amount(items, needle):
    find_list = find(items, needle)
    result = sum(item['amount'] for good in find_list for item in items[good])

    return result


def expire(items, in_advance_days=0):
    today = date.today()
    list_of_expired_products = defaultdict(Decimal)
    for good, info in items.items():
        for item in info:
            expiration_date = item.get('expiration_date')
            if expiration_date and (today + timedelta(days=in_advance_days)) >= item['expiration_date']:
                list_of_expired_products[good] += item['amount']

    return [(good, amount) for good, amount in list_of_expired_products.items() if amount >0]
